version: '3'
services:
  reverse-proxy:
    image: traefik:v2.2
    command:
      # Try to enable this if something isn't working. Chances are, Traefik will tell you why
      # Be careful on production as it exposes the traffic you might not want to expose
      #--log.level=DEBUG
      # --api.dashboard=true
      # --api.insecure=true

      --entrypoints.http.address=:80
      --entrypoints.https.address=:443
      --providers.docker=true
      --api=false
      --certificatesresolvers.letsencrypt.acme.httpchallenge=true
      --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=http
      --certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}
      --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/letsencrypt:/letsencrypt
  wownerod:
    image: lalanza808/wownero:latest
    volumes:
      - ./data/daemon:/data
    command:
      wownerod --data-dir=/data --rpc-bind-ip=0.0.0.0 --confirm-external-bind --non-interactive --public-node --restricted-rpc
    ports:
      - 34568:34568
    labels:
      - "traefik.http.routers.https.rule=Host(`${DAEMON_HOSTNAME}`)"
      - "traefik.http.routers.http.rule=Host(`${DAEMON_HOSTNAME}`)"
      - "traefik.http.routers.https.entrypoints=https"
      - "traefik.http.routers.http.entrypoints=http"
      - "traefik.http.routers.https.tls=true"
      - "traefik.http.routers.https.tls.certresolver=letsencrypt"
